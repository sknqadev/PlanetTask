name: Online Banking CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven  # Cache Maven dependencies for faster builds
      - name: Build project
        run: mvn clean package -DskipTests=true

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run unit tests
        run: echo "Unit tests passed"

  staging:
    name: Staging
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Start QA environment
        run: echo "QA environment is up and running"

  deploy-qa:
    name: QA Deployment
    runs-on: ubuntu-latest
    needs: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy application to QA environment
        run: |
          echo "ðŸš€ Starting mock-server..."
          cd mock-server
          java -jar target/mock-server-1.0-SNAPSHOT-jar-with-dependencies.jar start &
          MOCK_PID=$!
          cd ..
          sleep 3

  integration-tests:
    name: Integration Tests (API)
    runs-on: ubuntu-latest
    needs: deploy-qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run API integration tests
        run: |
          cd api-tests/ || exit 1
          mvn clean test -D allure.results.directory=../test-results/Allure
          cd ..

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: deploy-qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run performance tests
        run: echo "Performance tests passed"

  e2e-tests:
    name: End-to-End Tests (UI)
    runs-on: ubuntu-latest
    needs: deploy-qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js 20 (Cache npm deps)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm              # Cache npm dependencies
          cache-dependency-path: 'ui-tests/package-lock.json'
      - name: Install UI test dependencies
        run: |
          cd ui-tests/
          npm ci
          npx playwright install

      - name: Run Playwright UI tests
        run: |
          npx playwright test
          cd ..
      - name: Archive Allure results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}       # Always run this step to collect results even if tests fail
        with:
          name: allure-results
          path: /test-results/allure-results

  teardown-qa:
    name: Teardown QA Environment
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, performance-tests, e2e-tests]
    if: ${{ always() }}  # Always run teardown to stop QA environment, even if prior jobs failed
    steps:
      - name: Shutdown QA environment
        run: |
          echo "ðŸ›‘ Stopping mock-server..."
          kill "$MOCK_PID" || true

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, performance-tests, e2e-tests]
    if: ${{ github.ref == 'refs/heads/main' }}  # Only run in main branch push (not on PRs)
    steps:
      - name: Deploy application to Production
        run: echo "Production deployment completed"
